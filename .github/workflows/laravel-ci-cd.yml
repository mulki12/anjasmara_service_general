name: general-ci-cd

on:
  push:
    branches: [ master ]

jobs:
  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Yarn Build
        run: |
          yarn install
      - name: Upload build files
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:10.4
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: anjasmara_service_general
          ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
  test-php:
    name: Test/Lint PHP
    runs-on: ubuntu-latest
    needs: build-js
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4 # Use your PHP version
          extension-csv: mbstring, bcmath, pdo, pdo_mysql, sockets, amqp # Setup any required extensions for tests
      - name: Composer install
        run: composer install
      - name: Composer update
        run: composer update
      - name: build testing
        run: docker build .
      
  deploy:
    name: Deploy 
    runs-on: ubuntu-latest
    needs: [build-js, test-php, app-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Download build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          extension-csv: mbstring, bcmath, pdo, pdo_mysql, sockets, amqp
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate Key
        run: php artisan key:generate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Composer update
        run: composer update
      - uses: actions/checkout@v2
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/anjasmara_service_general:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

